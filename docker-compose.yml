services:

  # ------- ugc_api ------ #
  ugc_api:
    build:
      dockerfile: Dockerfile
      context: ./ugc_api
    container_name: ugc_api_service
    env_file:
      - .env
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - ugc_network
    volumes:
      - ./ugc_api/src:/ugc_api/src

  # ------- kafka ------ #
  zoo:
    image: bitnami/zookeeper:3.9.1
    tmpfs: "/zktmp"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - "2181:2181"
    networks:
      - ugc_network
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka:
    image: bitnami/kafka:3.7.0
    depends_on:
      - zoo
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zoo:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      - ugc_network
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "kafka:9092" ]
      interval: 10s
      timeout: 10s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_ZOOKEEPER: zoo:2181
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - ugc_network

  # ------- etl ------ #
  etl:
    build:
      context: ./etl
    env_file:
      - ./etl/.env
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_healthy

  # ------- clickhouse services ------ #
  zookeeper:
    image: zookeeper:3.8
    container_name: zookeeper
    hostname: zookeeper
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 10s
      timeout: 10s
      retries: 5

  clickhouse-node1:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./data/node1:/etc/clickhouse-server
    depends_on:
      zookeeper:
        condition: service_healthy

  clickhouse-node2:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    ports:
      - "8124:8123"
      - "9001:9000"
    volumes:
      - ./data/node2:/etc/clickhouse-server
    depends_on:
      zookeeper:
        condition: service_healthy

  clickhouse-node3:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    ports:
      - "8125:8123"
      - "9002:9000"
    volumes:
      - ./data/node3:/etc/clickhouse-server
    depends_on:
      zookeeper:
        condition: service_healthy

  clickhouse-node4:
    image: clickhouse/clickhouse-server:23
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    ports:
      - "8126:8123"
      - "9003:9000"
    volumes:
      - ./data/node4:/etc/clickhouse-server
    depends_on:
      zookeeper:
        condition: service_healthy

  # ------- common services ------ #
  nginx:
    container_name: ugc_nginx
    build:
      context: ./nginx/.
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/site.conf:/etc/nginx/conf.d/site.conf
    depends_on:
      - ugc_api
    ports:
      - "80:80"
    networks:
      - ugc_network


networks:
  ugc_network:

volumes:
  kafka_data: {}
  zookeeper_data: {}
