services:

  # ------- ugc_api ------ #
  ugc_api:
    build:
      dockerfile: Dockerfile
      context: ./ugc_api
    container_name: ugc_api_service
    env_file:
      - .env
    restart: always
    networks:
      - ugc_network
    volumes:
      - ./ugc_api/src:/ugc_api/src

  # ------- kafka ------ #
  zoo:
    image: bitnami/zookeeper:3.9.1
    tmpfs: "/zktmp"
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - "2181:2181"
    networks:
      - ugc_network
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka:
    image: bitnami/kafka:3.7.0
    depends_on:
      - zoo
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zoo:2181
      KAFKA_CFG_LISTENERS: INTERNAL://:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      - ugc_network
    volumes:
      - kafka_data:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_ZOOKEEPER: zoo:2181
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - ugc_network

  # ------- etl ------ #
  etl:
    build:
      context: ./etl
    env_file:
      - ./etl/.env
    restart: always
    depends_on:
      - kafka

  # ------- clickhouse ------ #
#
#  clickhouse-node-1:
#    image: clickhouse/clickhouse-server:24
#    container_name: clickhouse-node-1
#    hostname: clickhouse-node-1
#    volumes:
#      - ./data/nodes/node_1:/etc/clickhouse-server


  # ------- common services ------ #
  nginx:
    container_name: ugc_nginx
    build:
      context: ./nginx/.
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - ugc_api
    ports:
      - "80:80"
    networks:
      - ugc_network


networks:
  ugc_network:

volumes:
  kafka_data: {}
  zookeeper_data: {}
